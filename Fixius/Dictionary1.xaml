<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:p="clr-namespace:Inteldev.Core.Presentacion.Controles;assembly=Inteldev.Core.Presentacion"
					xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

	<!--<ControlTemplate x:Key="validationTemplate">
		<DockPanel HorizontalAlignment="Right">
			<TextBlock Foreground="Blue"  FontSize="20" Text="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />


			<AdornedElementPlaceholder HorizontalAlignment="Center"></AdornedElementPlaceholder>
		</DockPanel>
	</ControlTemplate>-->

	<!--<Style TargetType="{x:Type TextBox}" x:Key="txtBoxStyle">
		<Setter Property="Validation.ErrorTemplate">
			<Setter.Value>
				<ControlTemplate>
					<Border BorderBrush="Red" BorderThickness="1">
						<Border.Visibility>
							<Binding ElementName="placeholder" Path="AdornedElement.IsVisible">
								<Binding.Converter>
									<BooleanToVisibilityConverter/>
								</Binding.Converter>
							</Binding>
						</Border.Visibility>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Validation.HasError" Value="true">
				<Setter Property="Background" Value="Red"/>
				<Setter Property="Foreground" Value="White"/>
			</Trigger>
		</Style.Triggers>

	</Style>-->

	<!--<Style TargetType="{x:Type xctk:MaskedTextBox}" BasedOn="{StaticResource ResourceKey=validacion}"/>

	<Style x:Key="validacion">
		--><!--<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Margin" Value="0,2,40,2" />--><!--
		<Setter Property="Validation.ErrorTemplate">
			<Setter.Value>
				<ControlTemplate>
					<DockPanel LastChildFill="true">
						<Border Background="OrangeRed" DockPanel.Dock="left" Margin="5,0,0,0" 
							Width="20" Height="20" CornerRadius="5"
							ToolTip="{Binding ElementName=customAdorner, 
										Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
							<TextBlock Text="X" VerticalAlignment="center" HorizontalAlignment="center" 
								FontWeight="Bold" Foreground="white" />
						</Border>
						<AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" >
							<Border BorderBrush="red" BorderThickness="1" />
						</AdornedElementPlaceholder>
					</DockPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>-->


	<!--<Style TargetType="{x:Type Window}">-->
	<Style x:Key="FondoBase" TargetType="Window">
		<Setter Property="Background">
			<Setter.Value>
				<!--<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="White" Offset="0" />
					<GradientStop Color="White" Offset="1" />
					<GradientStop Color="#FFB2C0CC" Offset="0.697" />
					<GradientStop Color="#FFB1BFCB" Offset="0.303" />
				</LinearGradientBrush>-->
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="White" Offset="0"/>
					<GradientStop Color="White" Offset="1"/>
					<GradientStop Color="#FFA4A4A4" Offset="0.5"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type Window}" BasedOn="{StaticResource FondoBase}" >

	</Style>

	<Style TargetType="{x:Type p:BaseVentanaDialogo}" BasedOn="{StaticResource FondoBase}" >

	</Style>

	<Style TargetType="{x:Type Image}">
		<Style.Triggers>
			<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type UIElement}, AncestorLevel=1}, Path=IsEnabled}" Value="False">
				<Setter Property="Opacity" Value="0.3"></Setter>
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="DataGrid">
		<Setter Property="AlternatingRowBackground" Value="LightGray">
			<!--<Setter.Value>-->
			<!--<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FEDBEEFC" Offset="0" />
					<GradientStop Color="#FEDBEEFC" Offset="0.994" />
					<GradientStop Color="#FE7CAEE2" Offset="0.5" />
				</LinearGradientBrush>-->
			<!--<LinearGradientBrush StartPoint="0.5,0.0" EndPoint="0.5,1.0">
					<GradientStop Color="#FFFEFEFF" Offset="0"/>
					<GradientStop Color="#FFE4F0FC" Offset="1"/>
				</LinearGradientBrush>-->
			<!--</Setter.Value>-->
		</Setter>
		<Setter Property="AlternationCount" Value="2"/>
		<Setter Property="RowBackground">
			<Setter.Value>
				<!--<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
				<GradientStop Color="#FFEDF4FC" Offset="0" />
				<GradientStop Color="#FFE0ECF9" Offset="1" />
				<GradientStop Color="#FEB1D0F1" Offset="0.512" />
			</LinearGradientBrush>-->
				<!--<SolidColorBrush Color="#FFE3F1FE"/>-->
				<SolidColorBrush Color="White"/>
			</Setter.Value>
		</Setter>
		<Setter Property="AutoGenerateColumns" Value="False"></Setter>
		<Setter Property="GridLinesVisibility" Value="None"></Setter>
		<Setter Property="CanUserAddRows" Value="False"></Setter>
		<Setter Property="Background" Value="White"></Setter>
		<Setter Property="IsReadOnly" Value="True"></Setter>


	</Style>

	<!--<Style TargetType="{x:Type DataGridColumnHeader}">
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0.5,0.0" EndPoint="0.5,1.0">
					<GradientStop Color="#FF98BFEB" Offset="0"/>
					<GradientStop Color="#FFB8D4F2" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderBrush" >
			<Setter.Value>
				<SolidColorBrush Color="#88B0E4"/>
			</Setter.Value>
		</Setter>
   
		
	</Style>-->


	<!-- Generic brushes -->
	<SolidColorBrush x:Key="DefaultControlBorderBrush" Color="#FF688CAF"/>
	<SolidColorBrush x:Key="DefaultControlBackgroundBrush" Color="#FFE3F1FE"/>
	<SolidColorBrush x:Key="DefaultControlForegroundBrush" Color="#FF10257F"/>

	<!-- DataGrid related brushes -->
	<!--<SolidColorBrush x:Key="GridLineColorBrush" Color="#FFCEDFF6" />
	<LinearGradientBrush x:Key="AlternateRowBackgroundBrush" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
		<GradientStop Color="#FFFEFEFF" Offset="0"/>
		<GradientStop Color="#FFE4F0FC" Offset="1"/>
	</LinearGradientBrush>-->
	<SolidColorBrush x:Key="GridLineColorBrush" Color="Black"/>

	<!-- Header related brushes -->
	<SolidColorBrush x:Key="HeaderBorderBrush" Color="#88B0E4"/>
	<SolidColorBrush x:Key="HeaderInnerBorderBrush" Color="#FFFFFF" />
	<LinearGradientBrush x:Key="HeaderBackgroundBrush" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
		<GradientStop Color="#FF98BFEB" Offset="0"/>
		<GradientStop Color="#FFB8D4F2" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="HeaderHighlightedBackgoundBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#FFA3CBF7" Offset="0"/>
		<GradientStop Color="#FFD9E6F9" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="HeaderPressedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#FFA3CBF7" Offset="1"/>
		<GradientStop Color="#FFD9E6F9" Offset="0"/>
	</LinearGradientBrush>



</ResourceDictionary>